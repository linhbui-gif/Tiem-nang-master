{"version":3,"sources":["pages/BooksListSearch/BooksListSearch.tsx","pages/BooksListSearch/index.ts","components/Pagination/Pagination.tsx","components/Pagination/index.ts","assets/images/image-banner-1.png","components/Banner/Banner.tsx","components/Banner/index.ts","components/BookBlock/BookBlock.tsx","components/BookBlock/index.ts","containers/BooksList/BooksList.tsx","containers/BooksList/index.ts"],"names":["BooksListSearch","dispatch","useDispatch","keyword","useParams","getProductsSearchState","useSelector","state","productReducer","getProductsSearchResponse","data","useState","page","DEFAULT_PAGE","pageSize","DEFAULT_PAGE_SIZE","getProductsSearchParamsRequest","setGetProductsSearchParamsRequest","getProductsListSearch","useCallback","getProductsSearchAction","request","params","useEffect","className","Banner","image","ImageBanner1","title","BooksList","records","emptyTitle","total","onPaginateChange","scrollToTop","Pagination","onChange","classNames","current","hideOnSinglePage","showLessItems","showTotal","getTotalPage","showQuickJumper","showSizeChanger","itemRender","_","type","element","Icon","name","EIconName","AngleLeft","AngleRight","src","alt","BookBlock","images","pathImage","isQuoteBook","onClick","ids","dataFilter","useCarousel","onClickFilter","isEmpty","length","isDragging","setIsDragging","handleClickBookBlock","dataBook","slug","_id","navigate","Paths","BookDetail","gutter","wrap","map","item","active","includes","Empty","Carousels","arrows","dots","infinite","slidesToShow","slidesPerRow","slidesToScroll","onDragging","responsive","breakpoint","settings","index"],"mappings":"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","file":"static/js/10.545537b1.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from '@reach/router';\r\n\r\nimport Banner from '@/components/Banner';\r\nimport ImageBanner1 from '@/assets/images/image-banner-1.png';\r\nimport BooksList from '@/containers/BooksList';\r\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\r\nimport { getProductsSearchAction } from '@/redux/actions';\r\nimport { TGetProductsSearchParams } from '@/services/api';\r\nimport { TRootState } from '@/redux/reducers';\r\nimport { scrollToTop } from '@/utils/functions';\r\n\r\nconst BooksListSearch: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { keyword } = useParams();\r\n\r\n  const getProductsSearchState = useSelector(\r\n    (state: TRootState) => state.productReducer.getProductsSearchResponse?.data,\r\n  );\r\n\r\n  const [getProductsSearchParamsRequest, setGetProductsSearchParamsRequest] = useState<TGetProductsSearchParams>({\r\n    page: DEFAULT_PAGE,\r\n    pageSize: DEFAULT_PAGE_SIZE,\r\n    keyword,\r\n  });\r\n\r\n  const handlePageChange = (page: number, pageSize?: number): void => {\r\n    setGetProductsSearchParamsRequest({\r\n      ...getProductsSearchParamsRequest,\r\n      page,\r\n      pageSize: pageSize || getProductsSearchParamsRequest.pageSize,\r\n    });\r\n    scrollToTop();\r\n  };\r\n\r\n  const getProductsListSearch = useCallback(() => {\r\n    dispatch(getProductsSearchAction.request({ params: getProductsSearchParamsRequest }));\r\n  }, [dispatch, getProductsSearchParamsRequest]);\r\n\r\n  useEffect(() => {\r\n    getProductsListSearch();\r\n  }, [getProductsListSearch]);\r\n\r\n  useEffect(() => {\r\n    setGetProductsSearchParamsRequest({\r\n      ...getProductsSearchParamsRequest,\r\n      keyword,\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [keyword]);\r\n\r\n  return (\r\n    <div className=\"BooksListSearch\">\r\n      <Banner image={ImageBanner1} title=\"Tìm kiếm\" />\r\n\r\n      <BooksList\r\n        data={getProductsSearchState?.records}\r\n        emptyTitle=\"Không có dữ liệu cho kết quả tìm kiếm\"\r\n        page={getProductsSearchParamsRequest.page}\r\n        pageSize={getProductsSearchParamsRequest.pageSize}\r\n        total={getProductsSearchState?.total}\r\n        onPaginateChange={handlePageChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BooksListSearch;\r\n","import BooksListSearch from './BooksListSearch';\r\n\r\nexport default BooksListSearch;\r\n","import React from 'react';\r\nimport { Pagination as AntdPagination } from 'antd';\r\nimport classNames from 'classnames';\r\n\r\nimport { TPaginationProps } from '@/components/Pagination/Pagination.types';\r\n\r\nimport './Pagination.scss';\r\nimport Icon, { EIconName } from '@/components/Icon';\r\nimport { getTotalPage } from '@/utils/functions';\r\n\r\nconst Pagination: React.FC<TPaginationProps> = ({ page, pageSize, total = 0, className, onChange }) => {\r\n  const itemRender = (\r\n    _: number,\r\n    type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next',\r\n    element: React.ReactNode,\r\n  ): React.ReactNode => {\r\n    switch (type) {\r\n      case 'prev':\r\n        return <Icon name={EIconName.AngleLeft} />;\r\n      case 'next':\r\n        return <Icon name={EIconName.AngleRight} />;\r\n      default:\r\n        return element;\r\n    }\r\n  };\r\n  return (\r\n    <div className={classNames('Pagination', className)}>\r\n      <AntdPagination\r\n        current={page}\r\n        pageSize={pageSize}\r\n        total={total}\r\n        hideOnSinglePage\r\n        showLessItems\r\n        showTotal={(): string => `Trang ${page} / ${getTotalPage(total, pageSize)}`}\r\n        showQuickJumper={false}\r\n        showSizeChanger={false}\r\n        itemRender={itemRender}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import Pagination from './Pagination';\r\n\r\nexport * from './Pagination.types';\r\nexport default Pagination;\r\n","export default __webpack_public_path__ + \"static/media/image-banner-1.bb523a49.png\";","import React from 'react';\r\n\r\nimport { TBannerProps } from './Banner.types.d';\r\nimport './Banner.scss';\r\n\r\nconst Banner: React.FC<TBannerProps> = ({ image, title }) => {\r\n  return (\r\n    <div className=\"Banner\">\r\n      <div className=\"Banner-bg\">\r\n        <img src={image} alt=\"\" />\r\n      </div>\r\n\r\n      {title && <div className=\"Banner-title\">{title}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import Banner from './Banner';\r\n\r\nexport * from './Banner.types.d';\r\nexport default Banner;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { TBookBlockProps } from './BookBlock.types.d';\r\nimport './BookBlock.scss';\r\n\r\nconst BookBlock: React.FC<TBookBlockProps> = ({ images, image, pathImage, name, isQuoteBook, onClick }) => {\r\n  return (\r\n    <div className={classNames('BookBlock', { 'quote-book': isQuoteBook })} onClick={onClick}>\r\n      <div className=\"BookBlock-image\">\r\n        <img src={images?.[0] || image || pathImage} alt=\"\" />\r\n      </div>\r\n      {name && <div className=\"BookBlock-title\">{name}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookBlock;\r\n","import BookBlock from './BookBlock';\r\n\r\nexport * from './BookBlock.types.d';\r\nexport default BookBlock;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { useState } from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport classNames from 'classnames';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport BookBlock from '@/components/BookBlock';\r\nimport Pagination from '@/components/Pagination';\r\nimport Carousels from '@/components/Carousels';\r\nimport { TProduct } from '@/common/models';\r\nimport { Paths } from '@/pages/routers';\r\nimport Empty from '@/components/Empty';\r\n\r\nimport { TBooksListProps } from './BooksList.types.d';\r\nimport './BooksList.scss';\r\n\r\nconst BooksList: React.FC<TBooksListProps> = ({\r\n  ids = [],\r\n  data = [],\r\n  dataFilter,\r\n  title,\r\n  useCarousel,\r\n  emptyTitle,\r\n  page = 0,\r\n  pageSize = 0,\r\n  total = 0,\r\n  onPaginateChange,\r\n  onClickFilter,\r\n}) => {\r\n  const isEmpty = data && data.length === 0;\r\n  const [isDragging, setIsDragging] = useState<boolean>(false);\r\n\r\n  const handleClickBookBlock = (dataBook: TProduct): void => {\r\n    if (!isDragging) {\r\n      if (dataBook.slug && dataBook._id) {\r\n        navigate(Paths.BookDetail(dataBook.slug, dataBook._id));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"BooksList\">\r\n      <div className=\"container\">\r\n        <div className=\"BooksList-wrapper\">\r\n          {title ? (\r\n            <div className=\"BooksList-title\">{title}</div>\r\n          ) : (\r\n            <div className=\"BooksList-filters\">\r\n              <Row gutter={20} wrap={false}>\r\n                {dataFilter?.map((item) => (\r\n                  <Col key={item._id}>\r\n                    <div\r\n                      className={classNames('BooksList-filters-item', { active: ids.includes(item._id) })}\r\n                      onClick={(): void => onClickFilter?.(item)}\r\n                    >\r\n                      {item.name}\r\n                    </div>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </div>\r\n          )}\r\n\r\n          {isEmpty ? (\r\n            <Empty title={emptyTitle} />\r\n          ) : (\r\n            <>\r\n              {useCarousel ? (\r\n                <div className=\"BooksList-carousel\">\r\n                  <Carousels\r\n                    arrows={false}\r\n                    dots={false}\r\n                    infinite={false}\r\n                    slidesToShow={data.length < 5 ? data.length : 5}\r\n                    slidesPerRow={1}\r\n                    slidesToScroll={5}\r\n                    onDragging={setIsDragging}\r\n                    responsive={[\r\n                      {\r\n                        breakpoint: 991,\r\n                        settings: {\r\n                          slidesToShow: data.length < 4 ? data.length : 4,\r\n                          slidesToScroll: 4,\r\n                        },\r\n                      },\r\n                      {\r\n                        breakpoint: 768,\r\n                        settings: {\r\n                          slidesToShow: data.length < 3 ? data.length : 3,\r\n                          slidesToScroll: 3,\r\n                        },\r\n                      },\r\n                      {\r\n                        breakpoint: 575,\r\n                        settings: {\r\n                          slidesToShow: data.length < 2 ? data.length : 2,\r\n                          slidesToScroll: 2,\r\n                        },\r\n                      },\r\n                    ]}\r\n                  >\r\n                    {data.map((item) => (\r\n                      <div className=\"BooksList-carousel-item\" key={item._id}>\r\n                        <BookBlock {...item} onClick={(): void => handleClickBookBlock(item)} />\r\n                      </div>\r\n                    ))}\r\n                  </Carousels>\r\n                </div>\r\n              ) : (\r\n                <div className=\"BooksList-list\">\r\n                  <Row gutter={[36, 48]}>\r\n                    {data.map((item: any, index: number) => (\r\n                      // eslint-disable-next-line react/no-array-index-key\r\n                      <Col key={index}>\r\n                        <BookBlock {...item} onClick={(): void => handleClickBookBlock(item)} />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {!useCarousel && (\r\n            <div className=\"BooksList-pagination flex justify-end\">\r\n              <Pagination page={page} pageSize={pageSize} total={total} onChange={onPaginateChange} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BooksList;\r\n","import BooksList from './BooksList';\r\n\r\nexport * from './BooksList.types.d';\r\nexport default BooksList;\r\n"],"sourceRoot":""}