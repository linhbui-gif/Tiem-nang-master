{"version":3,"sources":["assets/images/image-connection-people.png","assets/images/bg-affiliate-marketing.png","pages/AffiliateMarketing/AffiliateMarketing.data.ts","pages/AffiliateMarketing/AffiliateMarketing.tsx","pages/AffiliateMarketing/index.ts","components/Pagination/Pagination.tsx","components/Pagination/index.ts","pages/HistoryTranscation/HistoryCoin/HistoryCoin.tsx","pages/HistoryTranscation/HistoryCoin/index.ts"],"names":["ETransactionType","APPELATION_RECEIVED","AffiliateMarketing","dispatch","useDispatch","profileState","useSelector","state","profileReducer","getProfileResponse","data","getTransactionState","transactionReducer","getTransactionResponse","useState","page","DEFAULT_PAGE","pageSize","DEFAULT_PAGE_SIZE","type","getTransactionParamsRequest","setGetTransactionParamsRequest","getTransactionList","useCallback","getTransactionAction","request","params","useEffect","className","src","BgAffiliateMarketing","alt","ImageConnectionPeople","referralId","onClick","copyText","Icon","name","EIconName","Copy","color","EIconColor","ORANGE_PEEL","HistoryCoin","records","total","onPaginateChange","Pagination","onChange","classNames","current","hideOnSinglePage","showLessItems","showTotal","getTotalPage","showQuickJumper","showSizeChanger","itemRender","_","element","AngleLeft","AngleRight","isEmpty","length","Empty","title","gutter","map","item","span","md","trans_code","bcoin_received","note","method","formatISODateToDateTime","create_at","_id"],"mappings":"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","file":"static/js/14.396f3be5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image-connection-people.87563db3.png\";","export default __webpack_public_path__ + \"static/media/bg-affiliate-marketing.c14f702d.png\";","import { ETransactionType } from '@/services/api';\r\n\r\nexport const dataAffiliateMarketingTabs = [\r\n  { label: 'Lịch sử nhận coin', value: ETransactionType.APPELATION_RECEIVED },\r\n  // { label: 'Sự kiện', value: 'EVENT' },\r\n];\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport classNames from 'classnames';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport ImageConnectionPeople from '@/assets/images/image-connection-people.png';\r\nimport BgAffiliateMarketing from '@/assets/images/bg-affiliate-marketing.png';\r\nimport Icon, { EIconColor, EIconName } from '@/components/Icon';\r\nimport { copyText } from '@/utils/functions';\r\nimport { TRootState } from '@/redux/reducers';\r\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\r\nimport { getTransactionAction } from '@/redux/actions';\r\nimport { TGetTransactionParams, ETransactionType } from '@/services/api';\r\nimport HistoryCoin from '@/pages/HistoryTranscation/HistoryCoin';\r\n\r\nimport { dataAffiliateMarketingTabs } from './AffiliateMarketing.data';\r\nimport './AffiliateMarketing.scss';\r\n\r\nconst AffiliateMarketing: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const profileState = useSelector((state: TRootState) => state.profileReducer.getProfileResponse)?.data;\r\n\r\n  const getTransactionState = useSelector((state: TRootState) => state.transactionReducer.getTransactionResponse?.data);\r\n  const [getTransactionParamsRequest, setGetTransactionParamsRequest] = useState<TGetTransactionParams>({\r\n    page: DEFAULT_PAGE,\r\n    pageSize: DEFAULT_PAGE_SIZE,\r\n    type: ETransactionType.APPELATION_RECEIVED,\r\n  });\r\n\r\n  const handlePageChange = (page: number, pageSize?: number): void => {\r\n    setGetTransactionParamsRequest({\r\n      ...getTransactionParamsRequest,\r\n      page,\r\n      pageSize: pageSize || getTransactionParamsRequest.pageSize,\r\n    });\r\n  };\r\n\r\n  const handleChangeHistoryTranscationTab = (type: ETransactionType): void => {\r\n    setGetTransactionParamsRequest({\r\n      page: DEFAULT_PAGE,\r\n      pageSize: DEFAULT_PAGE_SIZE,\r\n      type,\r\n    });\r\n  };\r\n\r\n  const getTransactionList = useCallback(() => {\r\n    dispatch(getTransactionAction.request({ params: getTransactionParamsRequest }));\r\n  }, [dispatch, getTransactionParamsRequest]);\r\n\r\n  useEffect(() => {\r\n    getTransactionList();\r\n  }, [getTransactionList]);\r\n\r\n  return (\r\n    <div className=\"AffiliateMarketing\">\r\n      <div className=\"AffiliateMarketing-wrapper\">\r\n        <div className=\"AffiliateMarketing-banner flex flex-col items-center justify-center\">\r\n          <div className=\"AffiliateMarketing-banner-bg\">\r\n            <img src={BgAffiliateMarketing} alt=\"\" />\r\n          </div>\r\n\r\n          <div className=\"AffiliateMarketing-banner-image\">\r\n            <img src={ImageConnectionPeople} alt=\"\" />\r\n          </div>\r\n\r\n          <div className=\"AffiliateMarketing-banner-description\">Chia sẻ mã giới thiệu của bạn để nhận coin</div>\r\n          <div className=\"AffiliateMarketing-banner-code flex items-center\">\r\n            <div className=\"AffiliateMarketing-banner-code-value\">{profileState?.referralId}</div>\r\n            <div\r\n              className=\"AffiliateMarketing-banner-code-copy flex items-center\"\r\n              onClick={(): void => copyText(profileState?.referralId || '')}\r\n            >\r\n              <Icon name={EIconName.Copy} color={EIconColor.ORANGE_PEEL} />\r\n              Copy\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"AffiliateMarketing-tabs\">\r\n          <div className=\"AffiliateMarketing-tabs-header\">\r\n            {/* eslint-disable-next-line no-constant-condition */}\r\n            {true ? (\r\n              <div className=\"AffiliateMarketing-tabs-header-title\">Lịch sử nhận coin</div>\r\n            ) : (\r\n              <Row>\r\n                {dataAffiliateMarketingTabs.map((item) => (\r\n                  <Col span={12}>\r\n                    <div\r\n                      key={item.value}\r\n                      className={classNames('AffiliateMarketing-tabs-header-item', {\r\n                        active: getTransactionParamsRequest.type === item.value,\r\n                      })}\r\n                      onClick={(): void => handleChangeHistoryTranscationTab(item.value)}\r\n                    >\r\n                      {item.label}\r\n                    </div>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"AffiliateMarketing-tabs-body\">\r\n            {getTransactionParamsRequest.type === ETransactionType.APPELATION_RECEIVED && (\r\n              <HistoryCoin\r\n                data={getTransactionState?.records}\r\n                page={getTransactionParamsRequest.page}\r\n                pageSize={getTransactionParamsRequest.pageSize}\r\n                total={getTransactionState?.total}\r\n                onPaginateChange={handlePageChange}\r\n              />\r\n            )}\r\n            {/* {getTransactionParamsRequest.type === 'EVENT' && <Events />} */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AffiliateMarketing;\r\n","import AffiliateMarketing from './AffiliateMarketing';\r\n\r\nexport default AffiliateMarketing;\r\n","import React from 'react';\r\nimport { Pagination as AntdPagination } from 'antd';\r\nimport classNames from 'classnames';\r\n\r\nimport { TPaginationProps } from '@/components/Pagination/Pagination.types';\r\n\r\nimport './Pagination.scss';\r\nimport Icon, { EIconName } from '@/components/Icon';\r\nimport { getTotalPage } from '@/utils/functions';\r\n\r\nconst Pagination: React.FC<TPaginationProps> = ({ page, pageSize, total = 0, className, onChange }) => {\r\n  const itemRender = (\r\n    _: number,\r\n    type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next',\r\n    element: React.ReactNode,\r\n  ): React.ReactNode => {\r\n    switch (type) {\r\n      case 'prev':\r\n        return <Icon name={EIconName.AngleLeft} />;\r\n      case 'next':\r\n        return <Icon name={EIconName.AngleRight} />;\r\n      default:\r\n        return element;\r\n    }\r\n  };\r\n  return (\r\n    <div className={classNames('Pagination', className)}>\r\n      <AntdPagination\r\n        current={page}\r\n        pageSize={pageSize}\r\n        total={total}\r\n        hideOnSinglePage\r\n        showLessItems\r\n        showTotal={(): string => `Trang ${page} / ${getTotalPage(total, pageSize)}`}\r\n        showQuickJumper={false}\r\n        showSizeChanger={false}\r\n        itemRender={itemRender}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import Pagination from './Pagination';\r\n\r\nexport * from './Pagination.types';\r\nexport default Pagination;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport { Col, Row } from 'antd';\r\n\r\nimport { formatISODateToDateTime } from '@/utils/functions';\r\nimport Pagination from '@/components/Pagination';\r\nimport Empty from '@/components/Empty';\r\n\r\nimport { THistoryCoinProps } from './HistoryCoin.types';\r\nimport './HistoryCoin.scss';\r\n\r\nconst HistoryCoin: React.FC<THistoryCoinProps> = ({ data = [], page, pageSize, total, onPaginateChange }) => {\r\n  const isEmpty = data?.length === 0;\r\n\r\n  return (\r\n    <div className=\"HistoryCoin\">\r\n      {isEmpty ? (\r\n        <Empty title=\"Không có dữ liệu lịch sử nhận coin\" />\r\n      ) : (\r\n        <Row gutter={[20, 20]}>\r\n          {data.map((item) => (\r\n            <Col key={item._id} span={24} md={{ span: 12 }}>\r\n              <div className=\"HistoryCoin-item\">\r\n                <div className=\"HistoryCoin-item-row flex justify-between items-center\">\r\n                  <div className=\"HistoryCoin-item-row-text\">Mã nhận :</div>\r\n                  <div className=\"HistoryCoin-item-row-text\">{item.trans_code}</div>\r\n                </div>\r\n\r\n                <div className=\"HistoryCoin-item-row flex justify-between items-center\">\r\n                  <div className=\"HistoryCoin-item-row-text small\">Số Bcoin đã nhận:</div>\r\n                  <div className=\"HistoryCoin-item-row-text hightlight\">\r\n                    <strong>{item.bcoin_received}</strong> Bcoin\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"HistoryCoin-item-row flex justify-between items-center\">\r\n                  <div className=\"HistoryCoin-item-row-text small\">{item.note}</div>\r\n                </div>\r\n\r\n                <div className=\"line\" />\r\n\r\n                <div className=\"HistoryCoin-item-row flex justify-between items-center\">\r\n                  <div className=\"HistoryCoin-item-row-text\">{item.method}</div>\r\n                  <div className=\"HistoryCoin-item-row-text gray\">{formatISODateToDateTime(item.create_at)}</div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n\r\n      <div className=\"HistoryCoin-pagination flex justify-end\">\r\n        <Pagination page={page} pageSize={pageSize} total={total} onChange={onPaginateChange} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryCoin;\r\n","import HistoryCoin from './HistoryCoin';\r\n\r\nexport default HistoryCoin;\r\n"],"sourceRoot":""}