{"version":3,"sources":["assets/images/image-introduction.png","containers/Introduction/index.ts","containers/Introduction/Introduction.tsx","pages/BooksLibrary/BooksLibrary.tsx","pages/BooksLibrary/index.ts","components/Pagination/Pagination.tsx","components/Pagination/index.ts","components/BookBlock/BookBlock.tsx","components/BookBlock/index.ts","containers/BooksList/BooksList.tsx","containers/BooksList/index.ts","assets/images/emotion/icon-books.svg","containers/CategoriesEmotion/CategoriesEmotion.tsx","containers/CategoriesEmotion/index.ts"],"names":["Introduction","className","src","ImageIntroduction","alt","BooksLibrary","dispatch","useDispatch","categoriesState","useSelector","state","uiReducer","categories","useState","paths","undefined","getProductsParamsRequest","setGetProductsParamsRequest","getProductsByCategoryState","productReducer","getProductsByCategoriesResponse","data","page","DEFAULT_PAGE","pageSize","DEFAULT_PAGE_SIZE","getCategoryListParamsRequest","setGetCategoryListParamsRequest","categoryList","setCategoryList","getCategoryListTotalState","categoryReducer","getCategoryListResponse","total","getCategoryListLoading","loadingReducer","EGetCategoryListAction","GET_CATEGORY_LIST","getProductFilterList","getFilterProductListResponse","isLoadMore","getTotalPage","dataCategoriesEmotion","title","list","getCategoryList","useCallback","getCategoryListAction","request","params","response","isFirstFetching","records","getFilterProductList","getFilterProductListAction","getProductsByCategory","filter","item","Boolean","trim","length","getProductsByCategoriesAction","body","useEffect","success","CategoriesEmotion","onLoadMore","ids","loading","onClickItem","indexArray","includes","_id","newFilter","map","index","uiActions","setCategories","BooksList","dataFilter","onClickFilter","isExisted","emptyTitle","Pagination","onChange","classNames","current","hideOnSinglePage","showLessItems","showTotal","showQuickJumper","showSizeChanger","itemRender","_","type","element","Icon","name","EIconName","AngleLeft","AngleRight","BookBlock","images","image","pathImage","isQuoteBook","onClick","useCarousel","onPaginateChange","isEmpty","isDragging","setIsDragging","handleClickBookBlock","dataBook","slug","navigate","Paths","BookDetail","gutter","wrap","active","Empty","Carousels","arrows","dots","infinite","slidesToShow","slidesPerRow","slidesToScroll","onDragging","responsive","breakpoint","settings","titleSticky","style","overflow","onScroll","e","currentTarget","offsetWidth","Math","ceil","scrollLeft","scrollWidth","sticky","listIdx","iconPath","ImageBook"],"mappings":"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","file":"static/js/9.b78d1634.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image-introduction.65d3a190.png\";","import Introduction from './Introduction';\r\n\r\nexport * from './Introduction.types.d';\r\nexport default Introduction;\r\n","import React from 'react';\r\n\r\nimport ImageIntroduction from '@/assets/images/image-introduction.png';\r\n\r\nimport { TIntroductionProps } from './Introduction.types.d';\r\nimport './Introduction.scss';\r\n\r\nconst Introduction: React.FC<TIntroductionProps> = () => {\r\n  return (\r\n    <div className=\"Introduction\">\r\n      <div className=\"container\">\r\n        <div className=\"Introduction-wrapper flex flex-wrap items-center\">\r\n          <div className=\"Introduction-wrapper-item\">\r\n            <div className=\"Introduction-image\">\r\n              <img src={ImageIntroduction} alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"Introduction-wrapper-item\">\r\n            <div className=\"Introduction-title\">Tiềm năng master</div>\r\n            <div className=\"Introduction-description\">\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\r\n              industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and\r\n              scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into\r\n              electronic typesetting, remaining essentially unchanged.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Introduction;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport CategoriesEmotion from '@/containers/CategoriesEmotion';\r\nimport BooksList from '@/containers/BooksList';\r\nimport Introduction from '@/containers/Introduction';\r\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\r\nimport {\r\n  EGetCategoryListAction,\r\n  getCategoryListAction,\r\n  getFilterProductListAction,\r\n  getProductsByCategoriesAction,\r\n  uiActions,\r\n} from '@/redux/actions';\r\nimport { TFilterProductList, TGetCategoryListParams, TGetProductsByCategoriesPaths } from '@/services/api';\r\nimport { TCategory } from '@/common/models';\r\nimport { getTotalPage } from '@/utils/functions';\r\nimport { TRootState } from '@/redux/reducers';\r\n\r\nconst BooksLibrary: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const categoriesState = useSelector((state: TRootState) => state.uiReducer.categories);\r\n\r\n  const [getProductsParamsRequest, setGetProductsParamsRequest] = useState<{\r\n    paths?: TGetProductsByCategoriesPaths;\r\n  }>({\r\n    paths: undefined,\r\n  });\r\n  const getProductsByCategoryState = useSelector(\r\n    (state: TRootState) => state.productReducer.getProductsByCategoriesResponse?.data,\r\n  );\r\n\r\n  const [getCategoryListParamsRequest, setGetCategoryListParamsRequest] = useState<TGetCategoryListParams>({\r\n    page: DEFAULT_PAGE,\r\n    pageSize: DEFAULT_PAGE_SIZE * 5,\r\n  });\r\n  const [categoryList, setCategoryList] = useState<TCategory[][]>([]);\r\n  const getCategoryListTotalState = useSelector(\r\n    (state: TRootState) => state.categoryReducer.getCategoryListResponse?.data.total,\r\n  );\r\n  const getCategoryListLoading = useSelector(\r\n    (state: TRootState) => state.loadingReducer[EGetCategoryListAction.GET_CATEGORY_LIST],\r\n  );\r\n\r\n  const getProductFilterList = useSelector(\r\n    (state: TRootState) => state.productReducer.getFilterProductListResponse?.data,\r\n  );\r\n\r\n  const isLoadMore =\r\n    getCategoryListParamsRequest.page <\r\n    getTotalPage(getCategoryListTotalState || 0, getCategoryListParamsRequest.pageSize);\r\n\r\n  const dataCategoriesEmotion = [\r\n    {\r\n      title: 'Chọn 3 danh mục',\r\n      list: categoryList?.[0] || [],\r\n    },\r\n    {\r\n      title: '',\r\n      list: categoryList?.[1] || [],\r\n    },\r\n    {\r\n      title: '',\r\n      list: categoryList?.[2] || [],\r\n    },\r\n  ];\r\n\r\n  const handleClickCategory = (data: TCategory, indexArray?: number): void => {\r\n    if (typeof indexArray === 'number') {\r\n      const isExisted = categoriesState?.includes(data._id);\r\n\r\n      if (!isExisted) {\r\n        const newFilter = categoriesState?.map((item, index) => {\r\n          if (index === indexArray) return data._id;\r\n\r\n          return item;\r\n        });\r\n\r\n        dispatch(uiActions.setCategories(newFilter));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFilterProduct = (data: TFilterProductList): void => {\r\n    const isExisted = getProductsParamsRequest.paths?.filter === data._id;\r\n    setGetProductsParamsRequest({\r\n      ...getProductsParamsRequest,\r\n      paths: {\r\n        filter: isExisted ? undefined : data._id,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleLoadMore = (): void => {\r\n    if (isLoadMore) {\r\n      setGetCategoryListParamsRequest({\r\n        ...getCategoryListParamsRequest,\r\n        page: getCategoryListParamsRequest.page + 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getCategoryList = useCallback(() => {\r\n    dispatch(\r\n      getCategoryListAction.request({ params: getCategoryListParamsRequest }, (response): void => {\r\n        const isFirstFetching = getCategoryListParamsRequest.page === DEFAULT_PAGE;\r\n        const data = response.data.records;\r\n        setCategoryList(\r\n          isFirstFetching\r\n            ? data\r\n            : [\r\n                [...(categoryList?.[0] || []), ...(data?.[0] || [])],\r\n                [...(categoryList?.[1] || []), ...(data?.[1] || [])],\r\n                [...(categoryList?.[2] || []), ...(data?.[2] || [])],\r\n              ],\r\n        );\r\n      }),\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, getCategoryListParamsRequest]);\r\n\r\n  const getFilterProductList = useCallback(() => {\r\n    dispatch(getFilterProductListAction.request({}));\r\n  }, [dispatch]);\r\n\r\n  const getProductsByCategory = useCallback(() => {\r\n    const isAtLeastThreeCategories = categoriesState?.filter((item) => Boolean(item?.trim()))?.length === 3;\r\n\r\n    if (isAtLeastThreeCategories) {\r\n      dispatch(getProductsByCategoriesAction.request({ ...getProductsParamsRequest, body: categoriesState }));\r\n    }\r\n  }, [dispatch, getProductsParamsRequest, categoriesState]);\r\n\r\n  useEffect(() => {\r\n    getProductsByCategory();\r\n  }, [getProductsByCategory]);\r\n\r\n  useEffect(() => {\r\n    getCategoryList();\r\n  }, [getCategoryList]);\r\n\r\n  useEffect(() => {\r\n    getFilterProductList();\r\n  }, [getFilterProductList]);\r\n\r\n  useEffect(() => {\r\n    return (): void => {\r\n      dispatch(getProductsByCategoriesAction.success(undefined));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"BooksLibrary\">\r\n      <Introduction />\r\n      <CategoriesEmotion\r\n        data={dataCategoriesEmotion}\r\n        onLoadMore={handleLoadMore}\r\n        ids={categoriesState}\r\n        loading={getCategoryListLoading}\r\n        onClickItem={handleClickCategory}\r\n      />\r\n      <BooksList\r\n        ids={[getProductsParamsRequest.paths?.filter]}\r\n        dataFilter={getProductFilterList}\r\n        data={getProductsByCategoryState}\r\n        onClickFilter={handleFilterProduct}\r\n        emptyTitle=\"Lưa chọn 3 danh mục để tìm kiếm\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BooksLibrary;\r\n","import BooksLibrary from './BooksLibrary';\r\n\r\nexport default BooksLibrary;\r\n","import React from 'react';\r\nimport { Pagination as AntdPagination } from 'antd';\r\nimport classNames from 'classnames';\r\n\r\nimport { TPaginationProps } from '@/components/Pagination/Pagination.types';\r\n\r\nimport './Pagination.scss';\r\nimport Icon, { EIconName } from '@/components/Icon';\r\nimport { getTotalPage } from '@/utils/functions';\r\n\r\nconst Pagination: React.FC<TPaginationProps> = ({ page, pageSize, total = 0, className, onChange }) => {\r\n  const itemRender = (\r\n    _: number,\r\n    type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next',\r\n    element: React.ReactNode,\r\n  ): React.ReactNode => {\r\n    switch (type) {\r\n      case 'prev':\r\n        return <Icon name={EIconName.AngleLeft} />;\r\n      case 'next':\r\n        return <Icon name={EIconName.AngleRight} />;\r\n      default:\r\n        return element;\r\n    }\r\n  };\r\n  return (\r\n    <div className={classNames('Pagination', className)}>\r\n      <AntdPagination\r\n        current={page}\r\n        pageSize={pageSize}\r\n        total={total}\r\n        hideOnSinglePage\r\n        showLessItems\r\n        showTotal={(): string => `Trang ${page} / ${getTotalPage(total, pageSize)}`}\r\n        showQuickJumper={false}\r\n        showSizeChanger={false}\r\n        itemRender={itemRender}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import Pagination from './Pagination';\r\n\r\nexport * from './Pagination.types';\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { TBookBlockProps } from './BookBlock.types.d';\r\nimport './BookBlock.scss';\r\n\r\nconst BookBlock: React.FC<TBookBlockProps> = ({ images, image, pathImage, name, isQuoteBook, onClick }) => {\r\n  return (\r\n    <div className={classNames('BookBlock', { 'quote-book': isQuoteBook })} onClick={onClick}>\r\n      <div className=\"BookBlock-image\">\r\n        <img src={images?.[0] || image || pathImage} alt=\"\" />\r\n      </div>\r\n      {name && <div className=\"BookBlock-title\">{name}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookBlock;\r\n","import BookBlock from './BookBlock';\r\n\r\nexport * from './BookBlock.types.d';\r\nexport default BookBlock;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { useState } from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport classNames from 'classnames';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport BookBlock from '@/components/BookBlock';\r\nimport Pagination from '@/components/Pagination';\r\nimport Carousels from '@/components/Carousels';\r\nimport { TProduct } from '@/common/models';\r\nimport { Paths } from '@/pages/routers';\r\nimport Empty from '@/components/Empty';\r\n\r\nimport { TBooksListProps } from './BooksList.types.d';\r\nimport './BooksList.scss';\r\n\r\nconst BooksList: React.FC<TBooksListProps> = ({\r\n  ids = [],\r\n  data = [],\r\n  dataFilter,\r\n  title,\r\n  useCarousel,\r\n  emptyTitle,\r\n  page = 0,\r\n  pageSize = 0,\r\n  total = 0,\r\n  onPaginateChange,\r\n  onClickFilter,\r\n}) => {\r\n  const isEmpty = data && data.length === 0;\r\n  const [isDragging, setIsDragging] = useState<boolean>(false);\r\n\r\n  const handleClickBookBlock = (dataBook: TProduct): void => {\r\n    if (!isDragging) {\r\n      if (dataBook.slug && dataBook._id) {\r\n        navigate(Paths.BookDetail(dataBook.slug, dataBook._id));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"BooksList\">\r\n      <div className=\"container\">\r\n        <div className=\"BooksList-wrapper\">\r\n          {title ? (\r\n            <div className=\"BooksList-title\">{title}</div>\r\n          ) : (\r\n            <div className=\"BooksList-filters\">\r\n              <Row gutter={20} wrap={false}>\r\n                {dataFilter?.map((item) => (\r\n                  <Col key={item._id}>\r\n                    <div\r\n                      className={classNames('BooksList-filters-item', { active: ids.includes(item._id) })}\r\n                      onClick={(): void => onClickFilter?.(item)}\r\n                    >\r\n                      {item.name}\r\n                    </div>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </div>\r\n          )}\r\n\r\n          {isEmpty ? (\r\n            <Empty title={emptyTitle} />\r\n          ) : (\r\n            <>\r\n              {useCarousel ? (\r\n                <div className=\"BooksList-carousel\">\r\n                  <Carousels\r\n                    arrows={false}\r\n                    dots={false}\r\n                    infinite={false}\r\n                    slidesToShow={data.length < 5 ? data.length : 5}\r\n                    slidesPerRow={1}\r\n                    slidesToScroll={5}\r\n                    onDragging={setIsDragging}\r\n                    responsive={[\r\n                      {\r\n                        breakpoint: 991,\r\n                        settings: {\r\n                          slidesToShow: data.length < 4 ? data.length : 4,\r\n                          slidesToScroll: 4,\r\n                        },\r\n                      },\r\n                      {\r\n                        breakpoint: 768,\r\n                        settings: {\r\n                          slidesToShow: data.length < 3 ? data.length : 3,\r\n                          slidesToScroll: 3,\r\n                        },\r\n                      },\r\n                      {\r\n                        breakpoint: 575,\r\n                        settings: {\r\n                          slidesToShow: data.length < 2 ? data.length : 2,\r\n                          slidesToScroll: 2,\r\n                        },\r\n                      },\r\n                    ]}\r\n                  >\r\n                    {data.map((item) => (\r\n                      <div className=\"BooksList-carousel-item\" key={item._id}>\r\n                        <BookBlock {...item} onClick={(): void => handleClickBookBlock(item)} />\r\n                      </div>\r\n                    ))}\r\n                  </Carousels>\r\n                </div>\r\n              ) : (\r\n                <div className=\"BooksList-list\">\r\n                  <Row gutter={[36, 48]}>\r\n                    {data.map((item: any, index: number) => (\r\n                      // eslint-disable-next-line react/no-array-index-key\r\n                      <Col key={index}>\r\n                        <BookBlock {...item} onClick={(): void => handleClickBookBlock(item)} />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {!useCarousel && (\r\n            <div className=\"BooksList-pagination flex justify-end\">\r\n              <Pagination page={page} pageSize={pageSize} total={total} onChange={onPaginateChange} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BooksList;\r\n","import BooksList from './BooksList';\r\n\r\nexport * from './BooksList.types.d';\r\nexport default BooksList;\r\n","export default __webpack_public_path__ + \"static/media/icon-books.ca584379.svg\";","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport classNames from 'classnames';\r\n\r\nimport ImageBook from '@/assets/images/emotion/icon-books.svg';\r\n\r\nimport { TCategoriesEmotionProps } from './CategoriesEmotion.types.d';\r\nimport './CategoriesEmotion.scss';\r\n\r\nconst CategoriesEmotion: React.FC<TCategoriesEmotionProps> = ({\r\n  loading,\r\n  titleSticky,\r\n  ids = [],\r\n  data = [],\r\n  onClickItem,\r\n  onLoadMore,\r\n}) => {\r\n  const handleScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n    const element = e.currentTarget;\r\n    const isScrollEnd = element.offsetWidth + Math.ceil(element.scrollLeft) >= element.scrollWidth;\r\n\r\n    if (isScrollEnd && !loading) onLoadMore?.();\r\n  };\r\n\r\n  return (\r\n    <div className=\"CategoriesEmotion\">\r\n      <div className=\"container\">\r\n        <div className=\"CategoriesEmotion-wrapper\">\r\n          <div\r\n            className=\"CategoriesEmotion-filters\"\r\n            style={{ overflow: titleSticky ? undefined : 'auto' }}\r\n            onScroll={handleScroll}\r\n          >\r\n            {data.map((item, index) => (\r\n              <>\r\n                <div className={classNames('CategoriesEmotion-filters-item-title', { sticky: titleSticky })}>\r\n                  {item.title}\r\n                </div>\r\n                <div\r\n                  className=\"CategoriesEmotion-filters-item-list\"\r\n                  style={{ overflow: !titleSticky ? undefined : 'auto' }}\r\n                >\r\n                  <Row gutter={[0, 12]} wrap={false}>\r\n                    {item.list.map((list, listIdx) => (\r\n                      <Col key={listIdx}>\r\n                        <div\r\n                          className={classNames('CategoriesEmotion-filters-item-list-item flex items-center', {\r\n                            active: ids.includes(list._id),\r\n                          })}\r\n                          onClick={(): void => onClickItem?.(list, index)}\r\n                        >\r\n                          <div className=\"CategoriesEmotion-filters-item-list-item-icon\">\r\n                            <img src={list.iconPath || ImageBook} alt=\"\" />\r\n                          </div>\r\n                          <div className=\"CategoriesEmotion-filters-item-list-item-label\">{list.name}</div>\r\n                        </div>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </div>\r\n              </>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoriesEmotion;\r\n","import CategoriesEmotion from './CategoriesEmotion';\r\n\r\nexport * from './CategoriesEmotion.types.d';\r\nexport default CategoriesEmotion;\r\n"],"sourceRoot":""}