{"version":3,"sources":["pages/Release/Release.tsx","pages/Release/index.ts","components/Pagination/Pagination.tsx","components/Pagination/index.ts","assets/images/image-banner-1.png","components/Banner/Banner.tsx","components/Banner/index.ts","components/BookBlock/BookBlock.tsx","components/BookBlock/index.ts","containers/BooksList/BooksList.tsx","containers/BooksList/index.ts","assets/images/emotion/icon-books.svg","containers/CategoriesEmotion/CategoriesEmotion.tsx","containers/CategoriesEmotion/index.ts"],"names":["Release","dispatch","useDispatch","moodsReasonsState","useSelector","state","uiReducer","moodsReasons","getMoodListState","moodReducer","getMoodListResponse","data","records","getReasonListState","getReasonListResponse","getProductsByCategoriesState","productReducer","getProductsByCategoriesResponse","getApophthganState","apophthganReducer","getApophthganResponse","dataCategoriesEmotion","title","list","getMoodList","useCallback","params","page","DEFAULT_PAGE","pageSize","getMoodListAction","request","getReasonList","getReasonListAction","getApophthganList","filter","item","Boolean","trim","length","getApophthganAction","mood","reason","getProductsByMoodAndReasonList","getProductsByCategoriesAction","body","useEffect","success","undefined","className","Banner","image","ImageBanner1","CategoriesEmotion","titleSticky","ids","onClickItem","type","EGetMoodListType","MOOD","uiActions","setMoodsReasons","_id","REASON","BooksList","useCarousel","emptyTitle","Pagination","total","onChange","classNames","current","hideOnSinglePage","showLessItems","showTotal","getTotalPage","showQuickJumper","showSizeChanger","itemRender","_","element","Icon","name","EIconName","AngleLeft","AngleRight","src","alt","BookBlock","images","pathImage","isQuoteBook","onClick","dataFilter","onPaginateChange","onClickFilter","isEmpty","useState","isDragging","setIsDragging","handleClickBookBlock","dataBook","slug","navigate","Paths","BookDetail","gutter","wrap","map","active","includes","Empty","Carousels","arrows","dots","infinite","slidesToShow","slidesPerRow","slidesToScroll","onDragging","responsive","breakpoint","settings","index","loading","onLoadMore","style","overflow","onScroll","e","currentTarget","offsetWidth","Math","ceil","scrollLeft","scrollWidth","sticky","listIdx","iconPath","ImageBook"],"mappings":"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","file":"static/js/8.0f97452d.chunk.js","sourcesContent":["/* eslint-disable no-underscore-dangle */\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Banner from '@/components/Banner';\r\nimport CategoriesEmotion from '@/containers/CategoriesEmotion';\r\nimport ImageBanner1 from '@/assets/images/image-banner-1.png';\r\nimport BooksList from '@/containers/BooksList';\r\nimport { DEFAULT_PAGE } from '@/common/constants';\r\nimport { getMoodListAction, getReasonListAction } from '@/redux/actions/mood';\r\nimport { TRootState } from '@/redux/reducers';\r\nimport { EGetMoodListType, TMoodList } from '@/services/api';\r\nimport { getApophthganAction, getProductsByCategoriesAction, uiActions } from '@/redux/actions';\r\n\r\nconst Release: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const moodsReasonsState = useSelector((state: TRootState) => state.uiReducer.moodsReasons);\r\n  const getMoodListState = useSelector((state: TRootState) => state.moodReducer.getMoodListResponse?.data.records);\r\n  const getReasonListState = useSelector((state: TRootState) => state.moodReducer.getReasonListResponse?.data.records);\r\n\r\n  const getProductsByCategoriesState = useSelector(\r\n    (state: TRootState) => state.productReducer.getProductsByCategoriesResponse?.data,\r\n  );\r\n  const getApophthganState = useSelector(\r\n    (state: TRootState) => state.apophthganReducer.getApophthganResponse?.data?.records,\r\n  );\r\n\r\n  const dataCategoriesEmotion = [\r\n    {\r\n      title: 'Tâm trạng hiện tại',\r\n      list: getMoodListState || [],\r\n    },\r\n    {\r\n      title: 'Căn nguyên',\r\n      list: getReasonListState || [],\r\n    },\r\n  ];\r\n\r\n  const handleClickEmotion = (data: TMoodList): void => {\r\n    const [mood, reason] = moodsReasonsState;\r\n    if (data.type === EGetMoodListType.MOOD) dispatch(uiActions.setMoodsReasons([data._id, reason]));\r\n    if (data.type === EGetMoodListType.REASON) dispatch(uiActions.setMoodsReasons([mood, data._id]));\r\n  };\r\n\r\n  const getMoodList = useCallback(() => {\r\n    const params = {\r\n      page: DEFAULT_PAGE,\r\n      pageSize: 100,\r\n    };\r\n    dispatch(getMoodListAction.request({ params }));\r\n  }, [dispatch]);\r\n\r\n  const getReasonList = useCallback(() => {\r\n    const params = {\r\n      page: DEFAULT_PAGE,\r\n      pageSize: 100,\r\n    };\r\n    dispatch(getReasonListAction.request({ params }));\r\n  }, [dispatch]);\r\n\r\n  const getApophthganList = useCallback(() => {\r\n    const isAtLeastTwoCategories = moodsReasonsState?.filter((item) => Boolean(item?.trim()))?.length === 2;\r\n    if (isAtLeastTwoCategories) {\r\n      dispatch(\r\n        getApophthganAction.request({\r\n          params: {\r\n            page: DEFAULT_PAGE,\r\n            pageSize: 100,\r\n            mood: moodsReasonsState[0],\r\n            reason: moodsReasonsState[1],\r\n          },\r\n        }),\r\n      );\r\n    }\r\n  }, [dispatch, moodsReasonsState]);\r\n\r\n  const getProductsByMoodAndReasonList = useCallback(() => {\r\n    const isAtLeastTwoCategories = moodsReasonsState?.filter((item) => Boolean(item?.trim()))?.length === 2;\r\n    if (isAtLeastTwoCategories) {\r\n      dispatch(getProductsByCategoriesAction.request({ body: moodsReasonsState }));\r\n    }\r\n  }, [dispatch, moodsReasonsState]);\r\n\r\n  useEffect(() => {\r\n    getApophthganList();\r\n  }, [getApophthganList]);\r\n\r\n  useEffect(() => {\r\n    getProductsByMoodAndReasonList();\r\n  }, [getProductsByMoodAndReasonList]);\r\n\r\n  useEffect(() => {\r\n    getMoodList();\r\n  }, [getMoodList]);\r\n\r\n  useEffect(() => {\r\n    getReasonList();\r\n  }, [getReasonList]);\r\n\r\n  useEffect(() => {\r\n    return (): void => {\r\n      dispatch(getApophthganAction.success(undefined));\r\n      dispatch(getProductsByCategoriesAction.success(undefined));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"Release\">\r\n      <Banner image={ImageBanner1} />\r\n      <CategoriesEmotion\r\n        titleSticky\r\n        ids={moodsReasonsState}\r\n        data={dataCategoriesEmotion}\r\n        onClickItem={handleClickEmotion}\r\n      />\r\n      <BooksList\r\n        useCarousel\r\n        title=\"Danh ngôn\"\r\n        data={getApophthganState as any}\r\n        emptyTitle=\"Không có dữ liệu danh ngôn\"\r\n      />\r\n      <BooksList\r\n        useCarousel\r\n        title=\"Tựa sách nên đọc\"\r\n        data={getProductsByCategoriesState}\r\n        emptyTitle=\"Không có dữ liệu tựa sách nên đọc\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Release;\r\n","import Release from './Release';\r\n\r\nexport default Release;\r\n","import React from 'react';\r\nimport { Pagination as AntdPagination } from 'antd';\r\nimport classNames from 'classnames';\r\n\r\nimport { TPaginationProps } from '@/components/Pagination/Pagination.types';\r\n\r\nimport './Pagination.scss';\r\nimport Icon, { EIconName } from '@/components/Icon';\r\nimport { getTotalPage } from '@/utils/functions';\r\n\r\nconst Pagination: React.FC<TPaginationProps> = ({ page, pageSize, total = 0, className, onChange }) => {\r\n  const itemRender = (\r\n    _: number,\r\n    type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next',\r\n    element: React.ReactNode,\r\n  ): React.ReactNode => {\r\n    switch (type) {\r\n      case 'prev':\r\n        return <Icon name={EIconName.AngleLeft} />;\r\n      case 'next':\r\n        return <Icon name={EIconName.AngleRight} />;\r\n      default:\r\n        return element;\r\n    }\r\n  };\r\n  return (\r\n    <div className={classNames('Pagination', className)}>\r\n      <AntdPagination\r\n        current={page}\r\n        pageSize={pageSize}\r\n        total={total}\r\n        hideOnSinglePage\r\n        showLessItems\r\n        showTotal={(): string => `Trang ${page} / ${getTotalPage(total, pageSize)}`}\r\n        showQuickJumper={false}\r\n        showSizeChanger={false}\r\n        itemRender={itemRender}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import Pagination from './Pagination';\r\n\r\nexport * from './Pagination.types';\r\nexport default Pagination;\r\n","export default __webpack_public_path__ + \"static/media/image-banner-1.bb523a49.png\";","import React from 'react';\r\n\r\nimport { TBannerProps } from './Banner.types.d';\r\nimport './Banner.scss';\r\n\r\nconst Banner: React.FC<TBannerProps> = ({ image, title }) => {\r\n  return (\r\n    <div className=\"Banner\">\r\n      <div className=\"Banner-bg\">\r\n        <img src={image} alt=\"\" />\r\n      </div>\r\n\r\n      {title && <div className=\"Banner-title\">{title}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import Banner from './Banner';\r\n\r\nexport * from './Banner.types.d';\r\nexport default Banner;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { TBookBlockProps } from './BookBlock.types.d';\r\nimport './BookBlock.scss';\r\n\r\nconst BookBlock: React.FC<TBookBlockProps> = ({ images, image, pathImage, name, isQuoteBook, onClick }) => {\r\n  return (\r\n    <div className={classNames('BookBlock', { 'quote-book': isQuoteBook })} onClick={onClick}>\r\n      <div className=\"BookBlock-image\">\r\n        <img src={images?.[0] || image || pathImage} alt=\"\" />\r\n      </div>\r\n      {name && <div className=\"BookBlock-title\">{name}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookBlock;\r\n","import BookBlock from './BookBlock';\r\n\r\nexport * from './BookBlock.types.d';\r\nexport default BookBlock;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { useState } from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport classNames from 'classnames';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport BookBlock from '@/components/BookBlock';\r\nimport Pagination from '@/components/Pagination';\r\nimport Carousels from '@/components/Carousels';\r\nimport { TProduct } from '@/common/models';\r\nimport { Paths } from '@/pages/routers';\r\nimport Empty from '@/components/Empty';\r\n\r\nimport { TBooksListProps } from './BooksList.types.d';\r\nimport './BooksList.scss';\r\n\r\nconst BooksList: React.FC<TBooksListProps> = ({\r\n  ids = [],\r\n  data = [],\r\n  dataFilter,\r\n  title,\r\n  useCarousel,\r\n  emptyTitle,\r\n  page = 0,\r\n  pageSize = 0,\r\n  total = 0,\r\n  onPaginateChange,\r\n  onClickFilter,\r\n}) => {\r\n  const isEmpty = data && data.length === 0;\r\n  const [isDragging, setIsDragging] = useState<boolean>(false);\r\n\r\n  const handleClickBookBlock = (dataBook: TProduct): void => {\r\n    if (!isDragging) {\r\n      if (dataBook.slug && dataBook._id) {\r\n        navigate(Paths.BookDetail(dataBook.slug, dataBook._id));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"BooksList\">\r\n      <div className=\"container\">\r\n        <div className=\"BooksList-wrapper\">\r\n          {title ? (\r\n            <div className=\"BooksList-title\">{title}</div>\r\n          ) : (\r\n            <div className=\"BooksList-filters\">\r\n              <Row gutter={20} wrap={false}>\r\n                {dataFilter?.map((item) => (\r\n                  <Col key={item._id}>\r\n                    <div\r\n                      className={classNames('BooksList-filters-item', { active: ids.includes(item._id) })}\r\n                      onClick={(): void => onClickFilter?.(item)}\r\n                    >\r\n                      {item.name}\r\n                    </div>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </div>\r\n          )}\r\n\r\n          {isEmpty ? (\r\n            <Empty title={emptyTitle} />\r\n          ) : (\r\n            <>\r\n              {useCarousel ? (\r\n                <div className=\"BooksList-carousel\">\r\n                  <Carousels\r\n                    arrows={false}\r\n                    dots={false}\r\n                    infinite={false}\r\n                    slidesToShow={data.length < 5 ? data.length : 5}\r\n                    slidesPerRow={1}\r\n                    slidesToScroll={5}\r\n                    onDragging={setIsDragging}\r\n                    responsive={[\r\n                      {\r\n                        breakpoint: 991,\r\n                        settings: {\r\n                          slidesToShow: data.length < 4 ? data.length : 4,\r\n                          slidesToScroll: 4,\r\n                        },\r\n                      },\r\n                      {\r\n                        breakpoint: 768,\r\n                        settings: {\r\n                          slidesToShow: data.length < 3 ? data.length : 3,\r\n                          slidesToScroll: 3,\r\n                        },\r\n                      },\r\n                      {\r\n                        breakpoint: 575,\r\n                        settings: {\r\n                          slidesToShow: data.length < 2 ? data.length : 2,\r\n                          slidesToScroll: 2,\r\n                        },\r\n                      },\r\n                    ]}\r\n                  >\r\n                    {data.map((item) => (\r\n                      <div className=\"BooksList-carousel-item\" key={item._id}>\r\n                        <BookBlock {...item} onClick={(): void => handleClickBookBlock(item)} />\r\n                      </div>\r\n                    ))}\r\n                  </Carousels>\r\n                </div>\r\n              ) : (\r\n                <div className=\"BooksList-list\">\r\n                  <Row gutter={[36, 48]}>\r\n                    {data.map((item: any, index: number) => (\r\n                      // eslint-disable-next-line react/no-array-index-key\r\n                      <Col key={index}>\r\n                        <BookBlock {...item} onClick={(): void => handleClickBookBlock(item)} />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {!useCarousel && (\r\n            <div className=\"BooksList-pagination flex justify-end\">\r\n              <Pagination page={page} pageSize={pageSize} total={total} onChange={onPaginateChange} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BooksList;\r\n","import BooksList from './BooksList';\r\n\r\nexport * from './BooksList.types.d';\r\nexport default BooksList;\r\n","export default __webpack_public_path__ + \"static/media/icon-books.ca584379.svg\";","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport classNames from 'classnames';\r\n\r\nimport ImageBook from '@/assets/images/emotion/icon-books.svg';\r\n\r\nimport { TCategoriesEmotionProps } from './CategoriesEmotion.types.d';\r\nimport './CategoriesEmotion.scss';\r\n\r\nconst CategoriesEmotion: React.FC<TCategoriesEmotionProps> = ({\r\n  loading,\r\n  titleSticky,\r\n  ids = [],\r\n  data = [],\r\n  onClickItem,\r\n  onLoadMore,\r\n}) => {\r\n  const handleScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n    const element = e.currentTarget;\r\n    const isScrollEnd = element.offsetWidth + Math.ceil(element.scrollLeft) >= element.scrollWidth;\r\n\r\n    if (isScrollEnd && !loading) onLoadMore?.();\r\n  };\r\n\r\n  return (\r\n    <div className=\"CategoriesEmotion\">\r\n      <div className=\"container\">\r\n        <div className=\"CategoriesEmotion-wrapper\">\r\n          <div\r\n            className=\"CategoriesEmotion-filters\"\r\n            style={{ overflow: titleSticky ? undefined : 'auto' }}\r\n            onScroll={handleScroll}\r\n          >\r\n            {data.map((item, index) => (\r\n              <>\r\n                <div className={classNames('CategoriesEmotion-filters-item-title', { sticky: titleSticky })}>\r\n                  {item.title}\r\n                </div>\r\n                <div\r\n                  className=\"CategoriesEmotion-filters-item-list\"\r\n                  style={{ overflow: !titleSticky ? undefined : 'auto' }}\r\n                >\r\n                  <Row gutter={[0, 12]} wrap={false}>\r\n                    {item.list.map((list, listIdx) => (\r\n                      <Col key={listIdx}>\r\n                        <div\r\n                          className={classNames('CategoriesEmotion-filters-item-list-item flex items-center', {\r\n                            active: ids.includes(list._id),\r\n                          })}\r\n                          onClick={(): void => onClickItem?.(list, index)}\r\n                        >\r\n                          <div className=\"CategoriesEmotion-filters-item-list-item-icon\">\r\n                            <img src={list.iconPath || ImageBook} alt=\"\" />\r\n                          </div>\r\n                          <div className=\"CategoriesEmotion-filters-item-list-item-label\">{list.name}</div>\r\n                        </div>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </div>\r\n              </>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoriesEmotion;\r\n","import CategoriesEmotion from './CategoriesEmotion';\r\n\r\nexport * from './CategoriesEmotion.types.d';\r\nexport default CategoriesEmotion;\r\n"],"sourceRoot":""}