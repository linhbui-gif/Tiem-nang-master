{"version":3,"sources":["pages/HistoryTranscation/HistoryBooks/index.ts","pages/HistoryTranscation/HistoryBooks/HistoryBooks.tsx","pages/HistoryTranscation/HistoryPayment/index.ts","pages/HistoryTranscation/HistoryPayment/HistoryPayment.tsx","pages/HistoryTranscation/HistoryTranscation.data.ts","pages/HistoryTranscation/HistoryTranscation.tsx","pages/HistoryTranscation/index.ts","components/Pagination/Pagination.tsx","components/Pagination/index.ts","pages/HistoryTranscation/HistoryCoin/HistoryCoin.tsx","pages/HistoryTranscation/HistoryCoin/index.ts"],"names":["HistoryBooks","data","page","pageSize","total","onPaginateChange","isEmpty","length","className","Empty","title","gutter","map","item","span","md","src","images","alt","name","author","bcoin","order_code","formatISODateToDateTime","create_at","_id","Pagination","onChange","HistoryPayment","recharge_code","formatMoneyVND","amount","showSuffix","method","dataHistoryTranscationTabs","label","value","ETransactionType","BUY_USE_WALLET","RECHARGE","APPELATION_RECEIVED","HistoryTranscation","dispatch","useDispatch","isMobile","useSelector","state","uiReducer","device","getTransactionState","transactionReducer","getTransactionResponse","useState","DEFAULT_PAGE","DEFAULT_PAGE_SIZE","type","getTransactionParamsRequest","setGetTransactionParamsRequest","handlePageChange","getTransactionList","useCallback","getTransactionAction","request","params","useEffect","undefined","classNames","active","onClick","records","HistoryCoin","current","hideOnSinglePage","showLessItems","showTotal","getTotalPage","showQuickJumper","showSizeChanger","itemRender","_","element","Icon","EIconName","AngleLeft","AngleRight","trans_code","bcoin_received","note"],"mappings":"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","file":"static/js/11.0ba1c849.chunk.js","sourcesContent":["import HistoryBooks from './HistoryBooks';\r\n\r\nexport default HistoryBooks;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport { Col, Row } from 'antd';\r\n\r\nimport Pagination from '@/components/Pagination';\r\nimport { formatISODateToDateTime } from '@/utils/functions';\r\nimport Empty from '@/components/Empty';\r\n\r\nimport { THistoryBooksProps } from './HistoryBooks.types.d';\r\nimport './HistoryBooks.scss';\r\n\r\nconst HistoryBooks: React.FC<THistoryBooksProps> = ({ data = [], page, pageSize, total, onPaginateChange }) => {\r\n  const isEmpty = data.length === 0;\r\n\r\n  return (\r\n    <div className=\"HistoryBooks\">\r\n      {isEmpty ? (\r\n        <Empty title=\"Không có dữ liệu lịch sử mua sách\" />\r\n      ) : (\r\n        <Row gutter={[20, 20]}>\r\n          {data.map((item) => (\r\n            <Col key={item._id} span={24} md={{ span: 12 }}>\r\n              <div className=\"HistoryBooks-item\">\r\n                <div className=\"HistoryBooks-item-header flex\">\r\n                  <div className=\"HistoryBooks-item-image\">\r\n                    <img src={item.images?.[0]} alt=\"\" />\r\n                  </div>\r\n\r\n                  <div className=\"HistoryBooks-item-info flex flex-col\">\r\n                    <div className=\"HistoryBooks-item-info-title\">{item.name}</div>\r\n                    <div className=\"HistoryBooks-item-info-description\">{item.author?.name}</div>\r\n                    <div className=\"HistoryBooks-item-info-price\">\r\n                      <strong>{item.bcoin} </strong>Bcoin\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"HistoryBooks-item-footer flex justify-between items-end\">\r\n                  <div className=\"HistoryBooks-item-footer-text\">Mã đơn hàng: {item.order_code}</div>\r\n                  <div className=\"HistoryBooks-item-footer-text nowrap\">\r\n                    {formatISODateToDateTime(item.create_at || '')}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n\r\n      <div className=\"HistoryBooks-pagination flex justify-end\">\r\n        <Pagination page={page} pageSize={pageSize} total={total} onChange={onPaginateChange} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryBooks;\r\n","import HistoryPayment from './HistoryPayment';\r\n\r\nexport default HistoryPayment;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport { Col, Row } from 'antd';\r\n\r\nimport { formatISODateToDateTime, formatMoneyVND } from '@/utils/functions';\r\nimport Pagination from '@/components/Pagination';\r\nimport Empty from '@/components/Empty';\r\n\r\nimport { THistoryPaymentProps } from './HistoryPayment.types';\r\nimport './HistoryPayment.scss';\r\n\r\nconst HistoryPayment: React.FC<THistoryPaymentProps> = ({ data, page, pageSize, total, onPaginateChange }) => {\r\n  const isEmpty = data.length === 0;\r\n\r\n  return (\r\n    <div className=\"HistoryPayment\">\r\n      {isEmpty ? (\r\n        <Empty title=\"Không có dữ liệu lịch sử nạp tiền\" />\r\n      ) : (\r\n        <Row gutter={[20, 20]}>\r\n          {data.map((item) => (\r\n            <Col key={item._id} span={24} md={{ span: 12 }}>\r\n              <div className=\"HistoryPayment-item\">\r\n                <div className=\"HistoryPayment-item-row flex justify-between items-center\">\r\n                  <div className=\"HistoryPayment-item-row-text\">Mã nạp :</div>\r\n                  <div className=\"HistoryPayment-item-row-text\">{item.recharge_code}</div>\r\n                </div>\r\n\r\n                <div className=\"HistoryPayment-item-row flex justify-between items-center\">\r\n                  <div className=\"HistoryPayment-item-row-text\">Số tiền nạp :</div>\r\n                  <div className=\"HistoryPayment-item-row-text hightlight\">\r\n                    <strong>{item.bcoin}</strong> Bcoin\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"HistoryPayment-item-row flex justify-between items-center\">\r\n                  <div className=\"HistoryPayment-item-row-text\" />\r\n                  <div className=\"HistoryPayment-item-row-text\">\r\n                    ( {formatMoneyVND({ amount: item.amount, showSuffix: true })} )\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"line\" />\r\n\r\n                <div className=\"HistoryPayment-item-row flex justify-between items-center\">\r\n                  <div className=\"HistoryPayment-item-row-text\">{item.method}</div>\r\n                  <div className=\"HistoryPayment-item-row-text gray\">{formatISODateToDateTime(item.create_at)}</div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n\r\n      <div className=\"HistoryPayment-pagination flex justify-end\">\r\n        <Pagination page={page} pageSize={pageSize} total={total} onChange={onPaginateChange} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryPayment;\r\n","import { ETransactionType } from '@/services/api';\r\n\r\nexport const dataHistoryTranscationTabs = [\r\n  { label: 'Lịch sử mua sách', value: ETransactionType.BUY_USE_WALLET },\r\n  { label: 'Lịch sử nạp tiền', value: ETransactionType.RECHARGE },\r\n  { label: 'Lịch sử nhận coin', value: ETransactionType.APPELATION_RECEIVED },\r\n];\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Col, Row } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TRootState } from '@/redux/reducers';\r\n\r\nimport HistoryBooks from '@/pages/HistoryTranscation/HistoryBooks';\r\nimport HistoryPayment from '@/pages/HistoryTranscation/HistoryPayment';\r\nimport HistoryCoin from '@/pages/HistoryTranscation/HistoryCoin';\r\nimport { ETransactionType, TGetTransactionParams } from '@/services/api';\r\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\r\nimport { getTransactionAction } from '@/redux/actions/transaction';\r\n\r\nimport { dataHistoryTranscationTabs } from './HistoryTranscation.data';\r\nimport './HistoryTranscation.scss';\r\n\r\nconst HistoryTranscation: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isMobile = useSelector((state: TRootState) => state.uiReducer.device.isMobile);\r\n  const getTransactionState = useSelector((state: TRootState) => state.transactionReducer.getTransactionResponse?.data);\r\n  const [getTransactionParamsRequest, setGetTransactionParamsRequest] = useState<TGetTransactionParams>({\r\n    page: DEFAULT_PAGE,\r\n    pageSize: DEFAULT_PAGE_SIZE,\r\n    type: ETransactionType.BUY_USE_WALLET,\r\n  });\r\n\r\n  const handlePageChange = (page: number, pageSize?: number): void => {\r\n    setGetTransactionParamsRequest({\r\n      ...getTransactionParamsRequest,\r\n      page,\r\n      pageSize: pageSize || getTransactionParamsRequest.pageSize,\r\n    });\r\n  };\r\n\r\n  const handleChangeHistoryTranscationTab = (type: ETransactionType): void => {\r\n    setGetTransactionParamsRequest({\r\n      page: DEFAULT_PAGE,\r\n      pageSize: DEFAULT_PAGE_SIZE,\r\n      type,\r\n    });\r\n  };\r\n\r\n  const getTransactionList = useCallback(() => {\r\n    dispatch(getTransactionAction.request({ params: getTransactionParamsRequest }));\r\n  }, [dispatch, getTransactionParamsRequest]);\r\n\r\n  useEffect(() => {\r\n    getTransactionList();\r\n  }, [getTransactionList]);\r\n\r\n  return (\r\n    <div className=\"HistoryTranscation\">\r\n      <div className=\"HistoryTranscation-wrapper\">\r\n        <div className=\"HistoryTranscation-tabs\">\r\n          <div className=\"HistoryTranscation-tabs-header\">\r\n            <Row gutter={[20, 20]}>\r\n              {dataHistoryTranscationTabs.map((item) => (\r\n                <Col span={isMobile ? 24 : undefined}>\r\n                  <div\r\n                    key={item.value}\r\n                    className={classNames('HistoryTranscation-tabs-header-item', {\r\n                      active: getTransactionParamsRequest.type === item.value,\r\n                    })}\r\n                    onClick={(): void => handleChangeHistoryTranscationTab(item.value)}\r\n                  >\r\n                    {item.label}\r\n                  </div>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </div>\r\n\r\n          <div className=\"HistoryTranscation-tabs-body\">\r\n            {getTransactionParamsRequest.type === ETransactionType.BUY_USE_WALLET && (\r\n              <HistoryBooks\r\n                data={getTransactionState?.records}\r\n                page={getTransactionParamsRequest.page}\r\n                pageSize={getTransactionParamsRequest.pageSize}\r\n                total={getTransactionState?.total}\r\n                onPaginateChange={handlePageChange}\r\n              />\r\n            )}\r\n            {getTransactionParamsRequest.type === ETransactionType.RECHARGE && (\r\n              <HistoryPayment\r\n                data={getTransactionState?.records}\r\n                page={getTransactionParamsRequest.page}\r\n                pageSize={getTransactionParamsRequest.pageSize}\r\n                total={getTransactionState?.total}\r\n                onPaginateChange={handlePageChange}\r\n              />\r\n            )}\r\n            {getTransactionParamsRequest.type === ETransactionType.APPELATION_RECEIVED && (\r\n              <HistoryCoin\r\n                data={getTransactionState?.records}\r\n                page={getTransactionParamsRequest.page}\r\n                pageSize={getTransactionParamsRequest.pageSize}\r\n                total={getTransactionState?.total}\r\n                onPaginateChange={handlePageChange}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryTranscation;\r\n","import HistoryTranscation from './HistoryTranscation';\r\n\r\nexport default HistoryTranscation;\r\n","import React from 'react';\r\nimport { Pagination as AntdPagination } from 'antd';\r\nimport classNames from 'classnames';\r\n\r\nimport { TPaginationProps } from '@/components/Pagination/Pagination.types';\r\n\r\nimport './Pagination.scss';\r\nimport Icon, { EIconName } from '@/components/Icon';\r\nimport { getTotalPage } from '@/utils/functions';\r\n\r\nconst Pagination: React.FC<TPaginationProps> = ({ page, pageSize, total = 0, className, onChange }) => {\r\n  const itemRender = (\r\n    _: number,\r\n    type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next',\r\n    element: React.ReactNode,\r\n  ): React.ReactNode => {\r\n    switch (type) {\r\n      case 'prev':\r\n        return <Icon name={EIconName.AngleLeft} />;\r\n      case 'next':\r\n        return <Icon name={EIconName.AngleRight} />;\r\n      default:\r\n        return element;\r\n    }\r\n  };\r\n  return (\r\n    <div className={classNames('Pagination', className)}>\r\n      <AntdPagination\r\n        current={page}\r\n        pageSize={pageSize}\r\n        total={total}\r\n        hideOnSinglePage\r\n        showLessItems\r\n        showTotal={(): string => `Trang ${page} / ${getTotalPage(total, pageSize)}`}\r\n        showQuickJumper={false}\r\n        showSizeChanger={false}\r\n        itemRender={itemRender}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import Pagination from './Pagination';\r\n\r\nexport * from './Pagination.types';\r\nexport default Pagination;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport { Col, Row } from 'antd';\r\n\r\nimport { formatISODateToDateTime } from '@/utils/functions';\r\nimport Pagination from '@/components/Pagination';\r\nimport Empty from '@/components/Empty';\r\n\r\nimport { THistoryCoinProps } from './HistoryCoin.types';\r\nimport './HistoryCoin.scss';\r\n\r\nconst HistoryCoin: React.FC<THistoryCoinProps> = ({ data = [], page, pageSize, total, onPaginateChange }) => {\r\n  const isEmpty = data?.length === 0;\r\n\r\n  return (\r\n    <div className=\"HistoryCoin\">\r\n      {isEmpty ? (\r\n        <Empty title=\"Không có dữ liệu lịch sử nhận coin\" />\r\n      ) : (\r\n        <Row gutter={[20, 20]}>\r\n          {data.map((item) => (\r\n            <Col key={item._id} span={24} md={{ span: 12 }}>\r\n              <div className=\"HistoryCoin-item\">\r\n                <div className=\"HistoryCoin-item-row flex justify-between items-center\">\r\n                  <div className=\"HistoryCoin-item-row-text\">Mã nhận :</div>\r\n                  <div className=\"HistoryCoin-item-row-text\">{item.trans_code}</div>\r\n                </div>\r\n\r\n                <div className=\"HistoryCoin-item-row flex justify-between items-center\">\r\n                  <div className=\"HistoryCoin-item-row-text small\">Số Bcoin đã nhận:</div>\r\n                  <div className=\"HistoryCoin-item-row-text hightlight\">\r\n                    <strong>{item.bcoin_received}</strong> Bcoin\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"HistoryCoin-item-row flex justify-between items-center\">\r\n                  <div className=\"HistoryCoin-item-row-text small\">{item.note}</div>\r\n                </div>\r\n\r\n                <div className=\"line\" />\r\n\r\n                <div className=\"HistoryCoin-item-row flex justify-between items-center\">\r\n                  <div className=\"HistoryCoin-item-row-text\">{item.method}</div>\r\n                  <div className=\"HistoryCoin-item-row-text gray\">{formatISODateToDateTime(item.create_at)}</div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n\r\n      <div className=\"HistoryCoin-pagination flex justify-end\">\r\n        <Pagination page={page} pageSize={pageSize} total={total} onChange={onPaginateChange} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryCoin;\r\n","import HistoryCoin from './HistoryCoin';\r\n\r\nexport default HistoryCoin;\r\n"],"sourceRoot":""}