{"version":3,"sources":["pages/Notifications/Notifications.tsx","pages/Notifications/index.ts","components/Pagination/Pagination.tsx","components/Pagination/index.ts"],"names":["Notifications","dispatch","useDispatch","useState","page","DEFAULT_PAGE","pageSize","DEFAULT_PAGE_SIZE","getNotificationsParamsRequest","setGetNotificationsParamsRequest","notifications","setNotifications","notificationTotal","setNotificationTotal","isEmpty","length","useEffect","getNotificationsAction","request","params","response","data","records","total","className","Empty","title","map","item","onClick","body","id","_id","readNotificationAction","getNotificationsUnreadAction","handleClickNotifcation","src","Favicon","alt","isRead","description","Icon","name","EIconName","AngleRight","Pagination","onChange","scrollToTop","classNames","current","hideOnSinglePage","showLessItems","showTotal","getTotalPage","showQuickJumper","showSizeChanger","itemRender","_","type","element","AngleLeft"],"mappings":"4PA8GeA,EA/FiB,WAC9B,IAAMC,EAAWC,cAEjB,EAA0EC,mBAAS,CACjFC,KAAMC,IACNC,SAAUC,MAFZ,mBAAOC,EAAP,KAAsCC,EAAtC,KAIA,EAA0CN,mBAA0B,IAApE,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAAkDR,mBAAiB,GAAnE,mBAAOS,EAAP,KAA0BC,EAA1B,KACMC,EAAmC,IAAzBJ,EAAcK,OAoC9B,OAdAC,qBAAU,WACRf,EACEgB,IAAuBC,QACrB,CAAEC,OAAQX,IACV,SAACY,GAA+C,IAAD,IACvCC,EAAI,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAUC,YAAb,aAAG,EAAgBC,QAC7BT,EAAoB,OAACO,QAAD,IAACA,GAAD,UAACA,EAAUC,YAAX,aAAC,EAAgBE,OACrCZ,EAAiBU,SAKtB,CAACpB,EAAUO,IAGZ,sBAAKgB,UAAU,gBAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,sCAAf,SACE,qBAAKA,UAAU,4CAAf,+BAGDV,EACC,cAACW,EAAA,EAAD,CAAOC,MAAM,qDAEb,qBAAKF,UAAU,oCAAf,gBACGd,QADH,IACGA,OADH,EACGA,EAAeiB,KAAI,SAACC,GAAD,OAClB,sBAEEJ,UAAU,0DACVK,QAAS,kBAzCM,SAACR,GAC9B,IAAMS,EAAO,CACXC,GAAIV,EAAKW,KAEX/B,EACEgC,KAAuBf,QAAQ,CAAEY,SAAQ,WACvC7B,EAASiC,IAA6BhB,QAAQ,SAmCfiB,CAAuBP,IAH9C,UAKE,qBAAKJ,UAAU,8CAAf,SACE,qBAAKY,IAAKC,IAASC,IAAI,QAEvBV,EAAKW,QAAU,qBAAKf,UAAU,kDAEhC,sBAAKA,UAAU,8CAAf,UACE,qBAAKA,UAAU,oDAAf,SAAoEI,EAAKF,QACzE,qBAAKF,UAAU,0DAAf,SAA0EI,EAAKY,iBAGjF,qBAAKhB,UAAU,+CAAf,SACE,cAACiB,EAAA,EAAD,CAAMC,KAAMC,IAAUC,iBAfnBhB,EAAKI,eAwBtB,qBAAKR,UAAU,4CAAf,SACE,cAACqB,EAAA,EAAD,CACEzC,KAAMI,EAA8BJ,KACpCE,SAAUE,EAA8BF,SACxCiB,MAAOX,EACPkC,SA7EiB,SAAC1C,EAAcE,GACtCG,EAAiC,2BAC5BD,GAD2B,IAE9BJ,OACAE,SAAUA,GAAYE,EAA8BF,YAEtDyC,uBC9BW/C,a,oGCyCA6C,EAjCgC,SAAC,GAAwD,IAAtDzC,EAAqD,EAArDA,KAAME,EAA+C,EAA/CA,SAA+C,IAArCiB,aAAqC,MAA7B,EAA6B,EAA1BC,EAA0B,EAA1BA,UAAWsB,EAAe,EAAfA,SAetF,OACE,qBAAKtB,UAAWwB,IAAW,aAAcxB,GAAzC,SACE,cAAC,IAAD,CACEyB,QAAS7C,EACTE,SAAUA,EACViB,MAAOA,EACP2B,kBAAgB,EAChBC,eAAa,EACbC,UAAW,iCAAuBhD,EAAvB,cAAiCiD,YAAa9B,EAAOjB,KAChEgD,iBAAiB,EACjBC,iBAAiB,EACjBC,WAzBa,SACjBC,EACAC,EACAC,GAEA,OAAQD,GACN,IAAK,OACH,OAAO,cAACjB,EAAA,EAAD,CAAMC,KAAMC,IAAUiB,YAC/B,IAAK,OACH,OAAO,cAACnB,EAAA,EAAD,CAAMC,KAAMC,IAAUC,aAC/B,QACE,OAAOe,IAePb,SAAUA,OClCHD,O","file":"static/js/21.99a240c7.chunk.js","sourcesContent":["/* eslint-disable no-underscore-dangle */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Favicon from '@/assets/images/favicon.png';\r\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\r\nimport Icon, { EIconName } from '@/components/Icon';\r\nimport { readNotificationAction, getNotificationsUnreadAction, getNotificationsAction } from '@/redux/actions';\r\nimport { TGetNotificationsResponse, TNotification } from '@/services/api';\r\nimport Empty from '@/components/Empty';\r\nimport Pagination from '@/components/Pagination';\r\nimport { scrollToTop } from '@/utils/functions';\r\n\r\nimport './Notifications.scss';\r\n\r\nconst Notifications: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [getNotificationsParamsRequest, setGetNotificationsParamsRequest] = useState({\r\n    page: DEFAULT_PAGE,\r\n    pageSize: DEFAULT_PAGE_SIZE,\r\n  });\r\n  const [notifications, setNotifications] = useState<TNotification[]>([]);\r\n  const [notificationTotal, setNotificationTotal] = useState<number>(0);\r\n  const isEmpty = notifications.length === 0;\r\n\r\n  const handlePageChange = (page: number, pageSize?: number): void => {\r\n    setGetNotificationsParamsRequest({\r\n      ...getNotificationsParamsRequest,\r\n      page,\r\n      pageSize: pageSize || getNotificationsParamsRequest.pageSize,\r\n    });\r\n    scrollToTop();\r\n  };\r\n\r\n  const handleClickNotifcation = (data: TNotification): void => {\r\n    const body = {\r\n      id: data._id,\r\n    };\r\n    dispatch(\r\n      readNotificationAction.request({ body }, (): void => {\r\n        dispatch(getNotificationsUnreadAction.request({}));\r\n      }),\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getNotificationsAction.request(\r\n        { params: getNotificationsParamsRequest },\r\n        (response: TGetNotificationsResponse): void => {\r\n          const data = response?.data?.records;\r\n          setNotificationTotal(response?.data?.total);\r\n          setNotifications(data);\r\n        },\r\n      ),\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, getNotificationsParamsRequest]);\r\n\r\n  return (\r\n    <div className=\"Notifications\">\r\n      <div className=\"Notifications-wrapper\">\r\n        <div className=\"AccountDropdown-notification\">\r\n          <div className=\"AccountDropdown-notification-header\">\r\n            <div className=\"AccountDropdown-notification-header-title\">Thông báo</div>\r\n          </div>\r\n\r\n          {isEmpty ? (\r\n            <Empty title=\"Không có dữ liệu thông báo\" />\r\n          ) : (\r\n            <div className=\"AccountDropdown-notification-body\">\r\n              {notifications?.map((item) => (\r\n                <div\r\n                  key={item._id}\r\n                  className=\"AccountDropdown-notification-body-item flex items-start\"\r\n                  onClick={(): void => handleClickNotifcation(item)}\r\n                >\r\n                  <div className=\"AccountDropdown-notification-body-item-icon\">\r\n                    <img src={Favicon} alt=\"\" />\r\n                  </div>\r\n                  {!item.isRead && <div className=\"AccountDropdown-notification-body-item-unread\" />}\r\n\r\n                  <div className=\"AccountDropdown-notification-body-item-info\">\r\n                    <div className=\"AccountDropdown-notification-body-item-info-title\">{item.title}</div>\r\n                    <div className=\"AccountDropdown-notification-body-item-info-description\">{item.description}</div>\r\n                  </div>\r\n\r\n                  <div className=\"AccountDropdown-notification-body-item-arrow\">\r\n                    <Icon name={EIconName.AngleRight} />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"Notifications-pagination flex justify-end\">\r\n        <Pagination\r\n          page={getNotificationsParamsRequest.page}\r\n          pageSize={getNotificationsParamsRequest.pageSize}\r\n          total={notificationTotal}\r\n          onChange={handlePageChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import Notifications from './Notifications';\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport { Pagination as AntdPagination } from 'antd';\r\nimport classNames from 'classnames';\r\n\r\nimport { TPaginationProps } from '@/components/Pagination/Pagination.types';\r\n\r\nimport './Pagination.scss';\r\nimport Icon, { EIconName } from '@/components/Icon';\r\nimport { getTotalPage } from '@/utils/functions';\r\n\r\nconst Pagination: React.FC<TPaginationProps> = ({ page, pageSize, total = 0, className, onChange }) => {\r\n  const itemRender = (\r\n    _: number,\r\n    type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next',\r\n    element: React.ReactNode,\r\n  ): React.ReactNode => {\r\n    switch (type) {\r\n      case 'prev':\r\n        return <Icon name={EIconName.AngleLeft} />;\r\n      case 'next':\r\n        return <Icon name={EIconName.AngleRight} />;\r\n      default:\r\n        return element;\r\n    }\r\n  };\r\n  return (\r\n    <div className={classNames('Pagination', className)}>\r\n      <AntdPagination\r\n        current={page}\r\n        pageSize={pageSize}\r\n        total={total}\r\n        hideOnSinglePage\r\n        showLessItems\r\n        showTotal={(): string => `Trang ${page} / ${getTotalPage(total, pageSize)}`}\r\n        showQuickJumper={false}\r\n        showSizeChanger={false}\r\n        itemRender={itemRender}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import Pagination from './Pagination';\r\n\r\nexport * from './Pagination.types';\r\nexport default Pagination;\r\n"],"sourceRoot":""}